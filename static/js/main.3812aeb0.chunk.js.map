{"version":3,"sources":["Components/Form/Form.jsx","Redux/main-reducer.js","Components/Form/FormContainer.jsx","Components/Profile/Profile.jsx","Components/Friends/Friend.jsx","Components/Friends/FriendsList.jsx","Components/Friends/FriendsListContainer.jsx","Components/Profile/PofileContainer.jsx","App.js","serviceWorker.js","Redux/redux-store.js","index.js"],"names":["Form","props","className","type","onChange","e","text","target","value","changeInputValue","inputText","maxLength","to","onClick","showProfile","internalState","inputValue","gotProfile","profile","profileFriends","mainReducer","state","action","friends","FormContainer","axios","profileId","then","response","undefined","length","alert","setProfileToState","this","React","Component","connect","mainData","Profile","src","photo_100","alt","first_name","last_name","showFriends","Friend","avtar","name","FriendsList","map","friend","photo_50","key","id","FriendsListContainer","ProfileContainer","setFriendsToState","items","path","render","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3812aeb0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Form = (props) => {\r\n    const newInputText = (e) => {\r\n        let text = e.target.value\r\n        props.changeInputValue(text)\r\n    }\r\n    return (\r\n        <div className=\"search-form\">\r\n            <div className=\"search-form__title\">Введите ID пользователя Вконтакте</div>\r\n            <input type=\"text\"\r\n                   className=\"search-form__input\"\r\n                   onChange={newInputText}\r\n                   value={props.inputText}\r\n                   maxLength=\"25\"\r\n\r\n            />\r\n            <NavLink to='/profile/'>\r\n                <button\r\n                    className=\"btn search-form__btn\"\r\n                    onClick={props.showProfile}\r\n                >Show Profile\r\n                </button>\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Form;","const CHANGE_INPUT_VALUE = 'CHANGE-INPUT-VALUE'\r\nconst SET_PROFILE = 'GET-PROFILE'\r\nconst SET_FRIENDS = 'GET-FRIENDS'\r\n\r\n\r\nconst internalState = {\r\n    inputValue:'',\r\n    gotProfile:false,\r\n    profile: {},\r\n    profileFriends: []\r\n}\r\nconst mainReducer = (state = internalState,action) => {\r\n        switch (action.type) {\r\n            case CHANGE_INPUT_VALUE: {\r\n\r\n                return {\r\n                    ...state,\r\n                    inputValue: action.inputValue,\r\n                }\r\n            }\r\n            case SET_PROFILE: {\r\n                return {\r\n                    ...state,\r\n                    profile:action.profile,\r\n                    gotProfile: true,\r\n                    profileFriends:[]\r\n                }\r\n            }\r\n            case SET_FRIENDS: {\r\n                return {\r\n                    ...state,\r\n                    profileFriends:action.friends\r\n                }\r\n            }\r\n            default:\r\n                return state\r\n        }\r\n}\r\n\r\nexport const changeInputValue = (inputValue) => {\r\n    return {\r\n        type: CHANGE_INPUT_VALUE,\r\n        inputValue\r\n    }\r\n}\r\nexport  const setProfileToState = profile => {\r\n    return {\r\n        type: SET_PROFILE,\r\n        profile,\r\n\r\n\r\n    }\r\n}\r\nexport const setFriendsToState = (friends) => {\r\n    return {\r\n        type: SET_FRIENDS,\r\n        friends\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport {changeInputValue, setProfileToState} from \"../../Redux/main-reducer\";\r\nimport * as axios from \"axios-jsonp-pro\"\r\n\r\n\r\nclass FormContainer extends React.Component {\r\n\r\n\r\n    showProfile = () => {\r\n        return axios.jsonp(`https://api.vk.com/method/users.get?user_ids=${this.props.profileId}&fields=photo_100&access_token=3667a9113667a9113667a911b836150a1a336673667a911688f6547e73321d48e3f1db1&v=5.52`)\r\n            .then(\r\n                response => {\r\n                    if (response.response === undefined) {\r\n                        alert(\"Invalid id\")\r\n                    } else if (response.response.length === 0){\r\n                        alert(\"Invalid id\")\r\n                    } else {\r\n                        this.props.setProfileToState(response.response[0])\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Form\r\n                changeInputValue={this.props.changeInputValue}\r\n                inputText={this.props.inputText}\r\n                showProfile={this.showProfile}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        inputText: state.mainData.inputValue,\r\n        profileId: state.mainData.inputValue,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {changeInputValue, setProfileToState})(FormContainer);","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__avatar\">\r\n                <img src={props.profile.photo_100} alt=\"\" className=\"profile__avatar-img\"/>\r\n            </div>\r\n            <div className=\"profile__name\">{`name: ${props.profile.first_name} ${props.profile.last_name}`}\r\n            </div>\r\n            <NavLink to='/profile/friends'>\r\n                <button onClick={props.showFriends} className=\"btn profile__btn\">Show Friends</button>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nconst Friend = (props) => {\r\n    return <div className=\"friends_item\">\r\n        <img src={props.avtar} alt=\"avatar\"/>\r\n        <div className=\"friendName\">\r\n            {props.name}\r\n        </div>\r\n    </div>\r\n}\r\nexport default Friend;\r\n","import React from \"react\";\r\nimport Friend from \"./Friend\";\r\n\r\nconst FriendsList = (props) => {\r\n    const friendsShow = () => {\r\n        return props.friends.map(friend => {\r\n            return <Friend\r\n                avtar={friend.photo_50}\r\n                name={friend.first_name + ' ' + friend.last_name}\r\n                key={friend.id}\r\n            />\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className=\"friends-list\">\r\n            {friendsShow()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FriendsList from \"./FriendsList\";\r\n\r\n\r\nclass FriendsListContainer extends React.Component{\r\n    render() {\r\n        return <FriendsList\r\n            friends = {this.props.friends}\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friends:state.mainData.profileFriends\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(FriendsListContainer)","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios-jsonp-pro\";\r\nimport {setFriendsToState} from \"../../Redux/main-reducer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport FriendsListContainer from \"../Friends/FriendsListContainer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    showFriends = () => {\r\n        return axios.jsonp(`https://api.vk.com/method/friends.get?user_id=${this.props.profile.id}&fields=photo_50&count=1000&access_token=3667a9113667a9113667a911b836150a1a336673667a911688f6547e73321d48e3f1db1&v=5.52`)\r\n            .then(\r\n                response => {\r\n                    if (response.response === undefined) {\r\n                        alert('Access denied: this profile is privateAccess denied: this profile is private')\r\n                    } else {\r\n                        this.props.setFriendsToState(response.response.items)\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.gotProfile ?\r\n                        <div>\r\n                            <Profile profile={this.props.profile}\r\n                                     showFriends={this.showFriends}\r\n                            />\r\n                            <Route path='/profile/friends' render={() => <FriendsListContainer/>}/>\r\n                        </div> :\r\n                        <div></div>\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.mainData.profile,\r\n        gotProfile: state.mainData.gotProfile,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {setFriendsToState})(ProfileContainer)","import React from 'react';\nimport './App.css';\nimport FormContainer from \"./Components/Form/FormContainer\";\nimport ProfileContainer from \"./Components/Profile/PofileContainer\";\nimport {Route} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n        <div className='container'>\n          <FormContainer/>\n          <Route path ='/profile/' render={()=> <ProfileContainer/>}/>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import mainReducer from \"./main-reducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        mainData: mainReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers)\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}